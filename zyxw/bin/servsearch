#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
Created on Tue Sep 16 11:09:47 2014

@author: chbrandt
"""

ucds = ['phot.flux',
        'phot.mag',
        'phot.count',
        'phys.luminosity',
        'pos.eq']

units = ['ct/s',
         'erg/s',
         'erg/s/cm2',
         'erg/s/cm^2',
         'mag',
         'mW/m2',
         '1e-17W/m2',
         'ct/ks',
         'mJy',
         'ct',
         '[10-7W]']

desc = """
 Code to search (USVAO) registry for catalogue services.
 It is hardcoded to look for catalogues providing spectral emission data; the
 columns/fields should present (any of) the following UCDs and units, resp:
 UCDs: %s
 Units: %s
 """ % (ucds,units)

from zyxw.vo import servsearch
from zyxw.io import config

import logging
LOGLEVEL = logging.DEBUG


def writeCatalogs(catalogues):
    print("\nCatologues selected [%d]:" % len(catalogues))
    out = {}
    for c in catalogues:
        out[c.shortname()] = c.summary()
        with open(c.shortname()+'.txt','w') as fp:
            for f in c.fielddesc():
                fp.write("%-20s : %-40s : %-35s : %-10s\n" % (f[0],f[1],f[2],f[3]))
    config.write_ini(out,'catalogs.ini')
    
# Lets put a cli here, so that the script can work with free parameters
#
if __name__ == '__main__':

    import argparse
    parser = argparse.ArgumentParser(description=desc)

    parser.add_argument('band', metavar='waveband',
                        choices=servsearch.BANDS.keys(),
                        help='Waveband of interest to search for.')
                        
    parser.add_argument('--keywords', nargs='?', action='store',
                        help='Special keywords to be found at catalogues.')
                        
    # Log
    #
    parser.add_argument('--log', nargs='?', const='servsearch.log', default=None,
                        help="Log script steps. A filename can be given as argument.")

    # Parse the known arguments
    args,unknown = parser.parse_known_args()

    # Start the logging
    if args.log:
        logging.basicConfig(filename=args.log, filemode='w',
                            format='[%(filename)s:%(funcName)20s] %(message)s',
                            level=LOGLEVEL)
    else:
        logging.disable(logging.NOTSET)

    _ucd = servsearch.BANDS[args.band]
    ucds = {_ucd:ucds}
    
    # Run
    catalogues = servsearch.main(args.band, args.keywords, ucds, units)
    
    writeCatalogs(catalogues)
    
